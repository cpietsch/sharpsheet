// https://github.com/cpietsch/sharpsheet v0.1.5 Copyright 2025 Christopher Pietsch
import e from"fs";import t from"sharp";import o from"path";import{glob as i}from"glob";import s from"@mapbox/shelf-pack";async function n(n,p,h){const l=h.border??1,c=h.sheetDimension||1024,m=h.outputFormat||"png",g=h.outputQuality||100,f=h.outputFilename||"spritesheet.json",u=h.compositeChunkSize||100,d=h.sheetBackground||{r:0,g:0,b:0,alpha:0};let w=[],y=[],$=[],k=[];if("string"==typeof n?k=n.startsWith("[")&&n.endsWith("]")?JSON.parse(n.replace(/'/g,'"')):i.sync(n):Array.isArray(n)&&(k=n),!k.length)return void console.error("no images found");const x=function(t){e.existsSync(t)||e.mkdirSync(t,{recursive:!0});return t}(p);console.log("found",k.length,"files"),console.log("loading metadata");for(const e in k){const i=k[e],s=o.parse(i).name;try{const o=await t(i).metadata(),n=o.width+2*l,r=o.height+2*l;if(n>c||r>c){console.warn(`Skipping ${i}: Image size ${o.width}x${o.height} (with border: ${n}x${r}) exceeds spritesheet dimension ${c}x${c}`);continue}w.push({id:+e,w:n,h:r}),y.push(i),$.push(s)}catch(e){console.error(e,i),console.log("skipping file")}}if(0===w.length)return void console.error("No valid images found that fit within the spritesheet dimensions");console.log("bin packing"),w.sort(((e,t)=>t.h-e.h));let b=w.map((e=>e)),S=[];for(;0!==b.length;){let e=new s(c,c).pack(b);S.push(e),b=b.filter((t=>!e.find((e=>e.id===t.id))))}const v=S.map((e=>e.map((e=>({name:$[e.id],input:y[e.id],left:e.x+l,top:e.y+l,width:e.w-2*l,height:e.h-2*l})))));console.log("creating spritesheets",v.length),await Promise.all(v.map((async(e,o)=>{console.log("composing spritesheet",o);const i={width:c,height:c,channels:4,background:d};let s=await t({create:i}).raw().toBuffer();const n=r(e,u);for(let e of n)console.log("composing sprites",u*o),s=await t(s,{raw:i}).composite(e).raw().toBuffer();const a=`sprite-${c}-${o}.${m}`;return{composite:e,fileName:a,fileMeta:await t(s,{raw:i}).toFormat(m,{quality:g}).toFile(x+"/"+a)}})));const F={meta:{type:"sharpsheet",version:"1",app:"https://github.com/cpietsch/sharpsheet"},spritesheets:v.map(((e,t)=>({image:a(c,t,m),sprites:e.map((({left:e,top:t,width:o,height:i,name:s})=>({name:s,position:{x:e,y:t},dimension:{w:o,h:i}})))})))};e.writeFileSync(x+"/"+f,JSON.stringify(F,null,2))}const r=(e,t)=>Array.from({length:Math.ceil(e.length/t)},((o,i)=>e.slice(i*t,i*t+t))),a=(e,t,o)=>`sprite-${e}-${t}.${o}`;export{n as default};
