// https://github.com/cpietsch/sharpsheet v0.0.1 Copyright 2020 Christopher Pietsch
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var t=e(require("fs")),o=e(require("sharp")),i=e(require("path")),s=e(require("glob")),n=e(require("@mapbox/shelf-pack"));const a=(e,t)=>Array.from({length:Math.ceil(e.length/t)},(o,i)=>e.slice(i*t,i*t+t)),r=(e,t,o)=>`sprite-${e}-${t}.${o}`;module.exports=async function(e,l,c){const p=c.border||1,h=c.sheetDimension||1024,u=c.outputFormat||"png",g=c.outputQuality||100,m=c.outputFilename||"spritesheet.json",f=c.inputFormat||"png",d=c.compositeChunkSize||100,w=c.sheetBackground||{r:0,g:0,b:0,alpha:0},y=function(e){t.existsSync(e)||t.mkdirSync(e,{recursive:!0});return e}(i.resolve("./",l)),b=s.sync(e+"/*."+f);let k=[],q=[],F=[];console.log("found",b.length,"files"),console.log("loading metadata");for(const e in b){const t=b[e],s=i.parse(t).name;try{const i=await o(t).metadata();k.push({id:+e,w:i.width+2*p,h:i.height+2*p}),q.push(t),F.push(s)}catch(e){console.error(e,t),console.log("skipping file")}}console.log("bin packing");let S=k.map(e=>e),$=[];for(;0!==S.length;){let e=new n(h,h).pack(S);$.push(e),S=S.filter(t=>!e.find(e=>e.id===t.id))}const v=$.map(e=>e.map(e=>({name:F[e.id],input:q[e.id],left:e.x+p,top:e.y+p,width:e.w-2*p,height:e.h-2*p})));console.log("creating spritesheets",v.length);const x=await Promise.all(v.map(async(e,t)=>{console.log("composing spritesheet",t);const i={width:h,height:h,channels:4,background:w};let s=await o({create:i}).raw().toBuffer();const n=a(e,d);for(let e of n)console.log("composing sprites",d*t),s=await o(s,{raw:i}).composite(e).raw().toBuffer();const r=`sprite-${h}-${t}.${u}`;return{composite:e,fileName:r,fileMeta:await o(s,{raw:i}).toFormat(u,{quality:g}).toFile(y+"/"+r)}}));console.log(x);const B={scaleName:"full",variation:"web",loadingStage:"web",id:"web_web_full",resolution:1,meta:{type:"sharpsheet",version:"1",app:"https://github.com/cpietsch/sharpsheet"},spritesheets:v.map((e,t)=>({image:r(h,t,u),sprites:e.map(({left:e,top:t,width:o,height:i,name:s})=>({name:s,position:{x:e,y:t},dimension:{w:o,h:i}}))}))};t.writeFileSync(y+"/"+m,JSON.stringify(B,null,2))};
